// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleCoreWebApp.Models;

#nullable disable

namespace SampleCoreWebApp.Migrations
{
    [DbContext(typeof(MockDatabaseContext))]
    partial class MockDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SampleCoreWebApp.Models.AreaCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaCode1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AreaCode");

                    b.HasKey("Id");

                    b.ToTable("AreaCodes");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.CategoryModel", b =>
                {
                    b.Property<Guid>("CategoryGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("category_guid");

                    b.Property<string>("CategoryColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category_color");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("category_name");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_date");

                    b.HasKey("CategoryGuid");

                    b.ToTable("CategoryModel", (string)null);
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.CommonName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.ToTable("CommonNames");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.CompanyCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyCode1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CompanyCode");

                    b.HasKey("Id");

                    b.ToTable("CompanyCodes");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.DataPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("DataPoints");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Gender_Type");

                    b.HasKey("Id");

                    b.ToTable("Gender", (string)null);
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.LastName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LastNames");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.MalesFirstName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MalesFirstName", (string)null);
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.Name", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FemaleFirstNames")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.OrgabsenceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OrgabsenceType1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("OrgabsenceType");

                    b.HasKey("Id");

                    b.ToTable("OrgabsenceTypes");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.StateAreaCode", b =>
                {
                    b.Property<int>("StateAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateAreaId"));

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateAreaId");

                    b.ToTable("StateAreaCodes");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.StateCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StateCode1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StateCode");

                    b.HasKey("Id");

                    b.ToTable("StateCodes");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.TemplateCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CategoryIdFk")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Category_Id_FK");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_On");

                    b.Property<int>("OrganisationId")
                        .HasColumnType("int")
                        .HasColumnName("Organisation_Id");

                    b.Property<Guid>("TemplateIdFk")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Template_Id_FK");

                    b.HasKey("Id");

                    b.ToTable("TemplateCategory", (string)null);
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.TemplateModel", b =>
                {
                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Template_Id");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_On");

                    b.Property<string>("Criteria")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("DataCount")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("(N'')");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.HasKey("TemplateId");

                    b.ToTable("TemplateModel", (string)null);
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.CommonName", b =>
                {
                    b.HasOne("SampleCoreWebApp.Models.Department", "Department")
                        .WithOne("DepartmentHead")
                        .HasForeignKey("SampleCoreWebApp.Models.CommonName", "DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SampleCoreWebApp.Models.Department", b =>
                {
                    b.Navigation("DepartmentHead")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
